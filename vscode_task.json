# cd C:\Users\Naimul\AppData\Roaming\Code\User
# notepad task.json

{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "PowerShell as Admin",
            "type": "shell",
            "command": "powershell",
            "args": [
                "/c",
                "Start-Process PowerShell -Verb RunAs"
            ],
            "problemMatcher": [],
            "presentation": {
                "reveal": "always",
                "panel": "new"
            }
        },
        {
            "label": "Clean Project",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "-Command",
                "Remove-Item -Path '${workspaceFolder}\\bin', '${workspaceFolder}\\obj' -Recurse -Force -ErrorAction SilentlyContinue"
            ],
            "problemMatcher": [],
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            }
        },
        {
            "label": "Git: Pull All Repositories",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "-Command",
                "Get-ChildItem -Directory | ForEach-Object { Push-Location $_.FullName; if (Test-Path .git) { git pull }; Pop-Location }"
            ],
            "problemMatcher": []
        },
        {
            "label": "Start Development Environment",
            "dependsOn": [
                "Start Backend",
                "Start Frontend"
            ],
            "dependsOrder": "parallel",
            "problemMatcher": []
        },
        {
            "label": "Start Backend",
            "type": "shell",
            "command": "npm",
            "args": [
                "run",
                "start:backend"
            ],
            "isBackground": true,
            "problemMatcher": {
                "pattern": {
                    "regexp": "^.*$",
                    "file": 1,
                    "location": 2,
                    "message": 3
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^.*Starting development server.*$",
                    "endsPattern": "^.*Development server started.*$"
                }
            }
        },
        {
            "label": "Start Frontend",
            "type": "shell",
            "command": "npm",
            "args": [
                "run",
                "start"
            ],
            "isBackground": true,
            "problemMatcher": {
                "pattern": {
                    "regexp": "^.*$",
                    "file": 1,
                    "location": 2,
                    "message": 3
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^.*Starting development server.*$",
                    "endsPattern": "^.*Compiled successfully.*$"
                }
            }
        },
        {
            "label": "Docker: Compose Up",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "up",
                "-d"
            ],
            "problemMatcher": []
        },
        {
            "label": "Docker: Compose Down",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "down"
            ],
            "problemMatcher": []
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "npm",
            "args": [
                "test"
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "dedicated"
            },
            "problemMatcher": [
                "$jest"
            ]
        }
    ]
}
